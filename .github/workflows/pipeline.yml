name: CI/CD Pipeline

on:
  workflow_dispatch: # 手動トリガー

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # サービスコンテナには`localhost:<port>`または`127.0.0.1:<port>`で接続可能
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: tmp_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d tmp_db" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.jsのセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # 必要なNode.jsのバージョン

      - name: Setup environmanet
        run: |
          echo "VITE_API_HOST=${{ secrets.VITE_API_HOST }}" >> ./.env.development
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_USER=${{ secrets.DB_USER }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development

      # Mocha/Chaiのテストを実行
      - name: Run backend tests
        working-directory: ./amplify/backend/function/lunchBuddyBackendApi/src
        run: |
          npm i
          npm run migrate:dev
          npm run seed:dev
          npm run test

      # フロントエンドの依存関係インストールとビルド
      - name: Build frontend with Vite
        working-directory: . # プロジェクトルートで作業
        run: |
          npm i
          npm run build

      # Amplify CLIのインストール
      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1  # 適切なリージョンを指定

      # Amplifyプロジェクトの初期化と公開
      - name: Amplify Pull Backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          amplify -v
          amplify pull --appId d2enwmup4uuds0 --envName dev --yes

      # 6. Amplify Functions のデプロイ
      - name: Deploy Amplify Functions
        run: amplify push --yes
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 7. Amplify Hosting のデプロイ
      - name: Deploy to Amplify Hosting
        run: |
          amplify publish --yes
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AMPLIFY_DEPLOY_TOKEN: ${{ secrets.AMPLIFY_DEPLOY_TOKEN }}

    # 手動トリガー時にブランチをmainに限定
    if: github.ref == 'refs/heads/main'
