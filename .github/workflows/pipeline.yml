name: CI/CD Pipeline

on:
  workflow_dispatch: # 手動トリガー

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # サービスコンテナには`localhost:<port>`または`127.0.0.1:<port>`で接続可能
    services:
      postgres:
        image: postgres
        # refer: https://hub.docker.com/_/postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 3000:3000
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }}" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # リポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.jsのセットアップ
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # 必要なNode.jsのバージョン

      - name: Setup environmanet
        run: |
          echo "VITE_API_HOST=${{ secrets.VITE_API_HOST }}" >> ./.env.development
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development
          echo "DB_USER=${{ secrets.DB_USER }}" >> ./amplify/backend/function/lunchBuddyBackendApi/src/.env.development

      # Mocha/Chaiのテストを実行
      - name: Run backend tests
        working-directory: ./amplify/backend/function/lunchBuddyBackendApi/src
        run: |
          npm i
          npm run migrate:dev
          npm run seed:dev
          npm run test

      # フロントエンドの依存関係インストールとビルド
      - name: Build frontend with Vite
        working-directory: . # プロジェクトルートで作業
        run: |
          npm i
          npm run build

      # Amplify CLIのインストール
      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      # Amplifyプロジェクトの初期化と公開
      # - name: Deploy with Amplify
      #   env: # 環境変数にAWS認証情報を設定
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #   run: |
      #     amplify init --yes
      #     amplify publish --yes

    # 手動トリガー時にブランチをmainに限定
    if: github.ref == 'refs/heads/main'
